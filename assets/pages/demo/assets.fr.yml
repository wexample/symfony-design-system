page_title: Assets

breakpoints:
  title: Breakpoints / Points d'arrêt
  body:
    Nous adoptons une approche standardisée et personnalisable pour les points d'arrêt, définissant une gamme étendue de dimensions d'écran spécifiques. Chaque catégorie d'écran active le chargement de fichiers CSS et JavaScript dédiés, optimisant ainsi l'affichage et les fonctionnalités pour l'utilisateur.
    <br><br>Cet exemple illustre le processus par un changement de couleur qui s'opère lorsque la feuille de style adaptée à la dimension d'écran actuelle est chargée. Vous avez la possibilité de tester différents points d'arrêt en ajustant la taille de votre fenêtre de navigateur.
    <br><br>Notre système prend en charge le chargement efficace des ressources, tant pour les feuilles de style CSS que pour le code JavaScript, ce dernier étant doté d'une syntaxe spécifique permettant une gestion fluide du chargement et du déchargement des scripts.
  body_js:
    La gestion du chargement des ressources est principalement orchestrée via JavaScript, éliminant ainsi le chargement préemptif des fichiers CSS qui ne seraient pas nécessaires. Dans l'éventualité où JavaScript serait désactivé sur la page, notre architecture bascule automatiquement sur une méthode alternative qui utilise les media queries intégrées aux balises style pour le chargement des fichiers. Pour une démonstration sans l'utilisation de JavaScript, veuillez consulter la <a href="?no_js=1">version sans JavaScript</a>.
  body_no_js:
    En l'absence de JavaScript, le chargement des feuilles de style est directement géré par le navigateur grâce à l'utilisation de l'attribut "media" dans la balise <link>. Cela implique que toutes les feuilles de styles soient chargées dès le lancement de la page, afin d'assurer une expérience utilisateur cohérente et complète.
    <br><br>Si vous souhaitez comparer, visitez la <a href="?no_js">version avec JavaScript</a> pour observer les différences de gestion des ressources.

infos:
  layout_name: Layout
  page_name: Template

page:
  title: Au niveau de la page
  body:
    Chaque classe d'objet Page dispose d'un callback `updateCurrentResponsiveDisplay` permettant de s'adapter au changement de taille d'écran.
    Dans cet exemple, c'est cette fonction qui gère le changement de taille de point d'arrêt en surbrillance, ci-dessus.

display:
  title: Responsive displays
  body:
    La fonctionnalité Page intègre des éléments spécifiques appelés PageResponsiveDisplays, conçus pour charger des fichiers JavaScript adaptés à chaque format d'écran.
    Cette approche assure une séparation efficace du code en fournissant des scripts sur mesure en fonction de la taille de l'écran utilisé.

resources:
  title: Ressources
  body_js: Voici la liste des assets actuellement utilisés par la page.
  body_no_js: La liste des ressources ne se met dynamiquement à jour que lorsque JavaScript est activé. Vous pouvez retrouver la liste directement dans le code source de la page.
  body_available: Voici la liste complète de tous les assets disponibles. Il seront chargés si besoin en fonction du contexte.
