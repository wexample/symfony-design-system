{%- extends '@WexBaseBundle/Resources/templates/bases/base.html.twig' -%}

{%- import '@WexBaseBundle/Resources/templates/macros/assets.html.twig' as macro_assets -%}

{%- block layout_base -%}
    {{- parent() -}}
    <!DOCTYPE html>
    <html lang="{{ app.request.locale }}">
    <head>
        <meta charset="utf-8"/>
        <title>{{ document_head_title ? (document_head_title | trans(document_head_title_args)) ~ ' | ' : '' }}{{ 'common.app::name' | trans }}</title>
        {%- block preloads -%}
            {{ constant('\\App\\Wex\\BaseBundle\\Helper\\RenderingHelper::PLACEHOLDER_PRELOAD_TAG') | raw }}
        {%- endblock -%}

        {%- block styles -%}
            {{ macro_assets.render_available_css('layout', render_pass.enableAggregation, layout_color_scheme, layout_use_js) }}
        {%- endblock -%}
        {%- if layout_use_js -%}
            <script nonce="layout-init">
              "use strict";

              {#- Use old school fashioned javascript notation to improve compatibility. -#}
              var AppRegistryBundlesManager = function AppRegistryBundlesManager() {
                this.classes = {};
              };

              AppRegistryBundlesManager.prototype = {
                add: function add(id, definition) {
                  {#- Prevent class override. -#}
                  if (!this.classes[id]) {
                    this.classes[id] = definition;
                  }

                  var app = window.app;

                  {#- When app core is not loaded, -#}
                  {#- js asset might be preloaded. -#}
                  if (app.hasCoreLoaded) {
                    {#- Mark now that class is loaded. -#}
                    app.services.assets.jsPendingLoaded(id);
                  }

                  {#- Return to allow export or extending class. -#}
                  return definition;
                }
              };

              window.appRegistry = {bundles: new AppRegistryBundlesManager()};

            </script>
            {# Don't use display none as we need to be able to calculate elements size before display #}
            <style>
                .layout-loading {
                    visibility: hidden;
                }
            </style>
        {%- endif -%}
        {%- block meta -%}
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <meta name="description" content="{{ (meta_description|default('@layout::meta.description')) | trans }}">
        {%- endblock -%}
    </head>
    <body class="color-scheme-{{ layout_color_scheme }} {{ body_class|default('') }}">
    <div id="layout" class="layout-loading {{ layout_class|default('') }}">
        {%- if layout_use_js -%}
            {#- If javascript fails to complete, force removing loading state after 2 seconds. -#}
            <script nonce="layout-loading">
              var classList = document.getElementById('layout').classList;
              classList.add('layout-loading');
              setTimeout(function () { classList.remove('layout-loading'); }, 2000);
            </script>
        {%- endif -%}

        {%- block layout -%}
            {%- block layout_composer_html -%}
                {%- block page -%}
                    {{ adaptive_response_set_context('page', page_name) }}
                    {%- block page_config -%}{%- endblock -%}
                    <div class="page">
                        {%- block page_composer_html -%}
                            {{- block('page_body') -}}
                        {%- endblock -%}
                    </div>
                    {{ adaptive_response_revert_context() }}
                {%- endblock -%}
            {%- endblock -%}
        {%- endblock -%}

        {# Global components template like modal #}
        <div id="components-templates"></div>

        <div id="vue-templates">
            {{ vue_render_templates() | raw }}
        </div>
    </div>

    {%- block template_assets -%}
        {{ macro_assets.render_available_css('layout', render_pass.enableAggregation, layout_color_scheme, layout_use_js) }}
        {{ macro_assets.render_available_css('page', render_pass.enableAggregation, layout_color_scheme, layout_use_js) }}
        {{ macro_assets.render_available_css('component', render_pass.enableAggregation, layout_color_scheme, layout_use_js) }}

        {% if render_pass.enableAggregation %}
           <link rel="stylesheet" media="screen" href="{{ asset(assets_render_initial_aggregated(page_name, 'css')) }}">
        {% endif %}

        {%- if layout_use_js -%}
            {{ macro_assets.render_available_js('layout', render_pass.enableAggregation, layout_color_scheme) }}
            {{ macro_assets.render_available_js('page', render_pass.enableAggregation, layout_color_scheme) }}
            {{ macro_assets.render_available_js('component', render_pass.enableAggregation, layout_color_scheme) }}

            {%- if render_pass.enableAggregation %}
                <script type="text/javascript" src="{{ asset(assets_render_initial_aggregated(page_name, 'js')) }}"></script>
            {%- else -%}
                <script type="text/javascript" src="{{ asset('build/runtime.js') }}"></script>
            {%- endif -%}

            <script type="text/javascript" nonce="layout-data" id="layout-data">
              window.appRegistry.layoutRenderData = {{ layout_render_initial_data() | json_encode(constant('JSON_PRETTY_PRINT')) | raw }};
            </script>
        {%- endif -%}
    {%- endblock -%}
    </body>
    </html>
{%- endblock -%}
